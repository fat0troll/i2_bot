// i2_bot ‚Äì Instinct PokememBro Bot
// Copyright (c) 2017 Vladimir "fat0troll" Hodakov

package welcomer

import (
	"github.com/go-telegram-bot-api/telegram-bot-api"
	"lab.pztrn.name/fat0troll/i2_bot/lib/dbmapping"
	"strconv"
)

// PrivateWelcomeMessageUnauthorized tell new user what to do.
func (w *Welcomer) PrivateWelcomeMessageUnauthorized(update *tgbotapi.Update) {
	message := "*–ë–æ—Ç –ò–Ω—Å—Ç–∏–Ω–∫—Ç–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è!*\n\n"
	message += "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—à–ª–∏ –æ—Ç –±–æ—Ç–∞ –∏–≥—Ä—ã @PokememBroBot –ø—Ä–æ—Ñ–∏–ª—å –≥–µ—Ä–æ—è.\n"
	message += "–í—Å–µ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–æ–∑–º–æ–∂–Ω—ã –ª–∏—à—å –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞.\n\n"

	message += "–ö–∞–∫ –ø–µ—Ä–µ—Å–ª–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å: –ø–µ—Ä–µ–π–¥–∏ –≤ @pokemembrobot, –Ω–∞–∂–º–∏ —Ç–∞–º –∫–Ω–æ–ø–∫—É üë§–ì–µ—Ä–æ–π. –©–µ–ª–∫–Ω–∏ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å —Ç–≤–æ–∏–º —É—Ä–æ–≤–Ω–µ–º, –∞—Ç–∞–∫–æ–π, –æ–ø—ã—Ç–æ–º –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏ (–∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ç–∞–ø–Ω–∏, –µ—Å–ª–∏ —Ç—ã —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞), –≤ –ø–æ—è–≤–∏–≤—à–µ–º—Å—è –º–µ–Ω—é –Ω–∞–∂–º–∏ –ü–µ—Ä–µ—Å–ª–∞—Ç—å –∏ –≤—ã–±–µ—Ä–∏ @i2_bot, —Ç–æ –µ—Å—Ç—å –º–µ–Ω—è, –≤ –ø–æ—è–≤–∏–≤—à–µ–º—Å—è —Å–ø–∏—Å–∫–µ —á–∞—Ç–æ–≤, –∞ –∑–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"

	msg := tgbotapi.NewMessage(update.Message.Chat.ID, message)
	msg.ParseMode = "Markdown"

	c.Bot.Send(msg)
}

// PrivateWelcomeMessageAuthorized greets existing user
func (w *Welcomer) PrivateWelcomeMessageAuthorized(update *tgbotapi.Update, playerRaw *dbmapping.Player) {
	message := "*–ë–æ—Ç –ò–Ω—Å—Ç–∏–Ω–∫—Ç–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è. –°–Ω–æ–≤–∞.*\n\n"
	message += "–ü—Ä–∏–≤–µ—Ç, " + update.Message.From.FirstName + " " + update.Message.From.LastName + "!\n"
	message += "–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–±–µ: " + playerRaw.UpdatedAt.Format("02.01.2006 15:04:05 -0700")
	message += "\n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ: /me"
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, message)
	msg.ParseMode = "Markdown"

	c.Bot.Send(msg)
}

// PrivateWelcomeMessageSpecial greets existing user with `special` access
func (w *Welcomer) PrivateWelcomeMessageSpecial(update *tgbotapi.Update, playerRaw *dbmapping.Player) {
	message := "*–ë–æ—Ç –ò–Ω—Å—Ç–∏–Ω–∫—Ç–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è. –°–Ω–æ–≤–∞.*\n\n"
	message += "–ü—Ä–∏–≤–µ—Ç, " + update.Message.From.FirstName + " " + update.Message.From.LastName + "!\n"
	message += "\n–ë—É–¥—å –∞–∫–∫—É—Ä–∞—Ç–µ–Ω, —Å—É–ø–µ—Ä—é–∑–µ—Ä!"
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, message)
	msg.ParseMode = "Markdown"

	c.Bot.Send(msg)
}

// GroupWelcomeMessage welcomes new user on group or bot itself
func (w *Welcomer) GroupWelcomeMessage(update *tgbotapi.Update) string {
	newUsers := *update.Message.NewChatMembers
	for i := range newUsers {
		newUser := newUsers[i]
		if (newUser.UserName == "i2_bot") || (newUser.UserName == "i2_dev_bot") {
			w.groupStartMessage(update)
		} else {
			defaultGroupID, _ := strconv.ParseInt(c.Cfg.SpecialChats.DefaultID, 10, 64)

			if update.Message.Chat.ID == defaultGroupID {
				w.groupWelcomeUser(update, &newUser)
			}
		}
	}

	return "ok"
}
