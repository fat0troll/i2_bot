// i2_bot ‚Äì Instinct PokememBro Bot
// Copyright (c) 2017 Vladimir "fat0troll" Hodakov

package migrations

import (
	"database/sql"
)

// CreateLocationsUp creates `locations` table and fills it with data
func CreateLocationsUp(tx *sql.Tx) error {
	request := "CREATE TABLE `locations` ("
	request += "`id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'ID –ª–æ–∫–∞—Ü–∏–∏',"
	request += "`symbol` varchar(191) COLLATE 'utf8mb4_unicode_520_ci' NOT NULL COMMENT '–°–∏–º–≤–æ–ª –ª–æ–∫–∞—Ü–∏–∏',"
	request += "`name` varchar(191) NOT NULL COMMENT '–ò–º—è –ª–æ–∫–∞—Ü–∏–∏',"
	request += "`created_at` datetime NOT NULL COMMENT '–î–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É',"
	request += "PRIMARY KEY (`id`),"
	request += "UNIQUE KEY `id` (`id`),"
	request += "KEY `locations_created_at` (`created_at`)"
	request += ") ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COMMENT='–õ–æ–∫–∞—Ü–∏–∏';"
	_, err := tx.Exec(request)
	if err != nil {
		return err
	}

	// Insert locations
	_, err2 := tx.Exec("INSERT INTO `locations` VALUES(NULL, ':evergreen_tree:', '–õ–µ—Å', NOW());")
	if err2 != nil {
		return err2
	}
	_, err3 := tx.Exec("INSERT INTO `locations` VALUES(NULL, '‚õ∞', '–ì–æ—Ä—ã', NOW());")
	if err3 != nil {
		return err2
	}
	_, err4 := tx.Exec("INSERT INTO `locations` VALUES(NULL, ':rowboat:', '–û–∑–µ—Ä–æ', NOW());")
	if err4 != nil {
		return err2
	}
	_, err5 := tx.Exec("INSERT INTO `locations` VALUES(NULL, 'üèô', '–ì–æ—Ä–æ–¥', NOW());")
	if err5 != nil {
		return err2
	}
	_, err6 := tx.Exec("INSERT INTO `locations` VALUES(NULL, 'üèõ', '–ö–∞—Ç–∞–∫–æ–º–±—ã', NOW());")
	if err6 != nil {
		return err2
	}
	_, err7 := tx.Exec("INSERT INTO `locations` VALUES(NULL, ':church:', '–ö–ª–∞–¥–±–∏—â–µ', NOW());")
	if err7 != nil {
		return err2
	}

	return nil
}

// CreateLocationsDown drops `locations` table
func CreateLocationsDown(tx *sql.Tx) error {
	_, err := tx.Exec("DROP TABLE `locations`;")
	if err != nil {
		return err
	}
	return nil
}
